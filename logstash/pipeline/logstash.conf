input {
	beats {
		type => "logs"
		port => 5044
		include_codec_tag => false
	}
}

filter {
	if [event][dataset] == "apache.access"{
		grok {
			# ecs_compatibility => v1
			# patterns_dir => ["./patterns"]
			match => { 
				# apache common
				# "message" => '%{COMMONAPACHELOG}'
				"message" => '%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "(?:%{WORD:method} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})" %{NUMBER:response} (?:%{NUMBER:bytes}|-)' 
			}
		}
		# mutate{
		# 	remove_field => ["message"]
		# }
		grok{
			match => {
				"request" => '%{MODULE_NAME_URL:module_name}'
			}
		}
	}
	if [fields][type] == "springboot_stacktrace"{
		grok{
			patterns_dir => ["./patterns"]
			match => {
				"message" => '%{DATETIMECUSTOMFR:datetime} %{JAVACLASS:javaclass}%{SPACE}%{WORD:message_type}\n%{GREEDYDATA:stacktrace}'
			}
		}
		grok{
			patterns_dir => ["./patterns"]
			match => {
				"message" => '%{MODULE_NAME:module_name}'
			}
		}
		
		ruby {
			code => "event.set('indices', event.get('stacktrace').scan(/(?<=\[)[^]]+(?=\])/))"
		}
		mutate{
			remove_field => "message"
		}
	}
}

output {
	stdout { codec => rubydebug }
	if [event][dataset] == "apache.access"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			# password => "${LOGSTASH_INTERNAL_PASSWORD}"
			# user => "logstash_internal"
			index => "logstash-apache-access-%{+YYYY.MM.dd}"
		}
	}
	if [fields][type] == "springboot_stacktrace"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			# password => "${LOGSTASH_INTERNAL_PASSWORD}"
			# user => "logstash_internal"
			index => "logstash-gpao-stacktrace-%{+YYYY.MM.dd}"
		}
	}

}
