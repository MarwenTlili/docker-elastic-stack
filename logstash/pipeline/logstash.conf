input {
	beats {
		type => "logs"
		port => 5044
		include_codec_tag => false
	}
}

filter {
	if [event][dataset] == "apache.access"{
		grok {
			# ecs_compatibility => v1
			patterns_dir => ["./patterns"]
			match => { 
				# apache common
				# "message" => '%{COMMONAPACHELOG}'
				"message" => '%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:logtimestamp}\] "(?:%{WORD:method} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})" %{NUMBER:response} (?:%{NUMBER:bytes}|-)' 
			}
		}
		grok{
			match => {
				"request" => ['%{MODULE_NAME_FROM_URL:module_name}','']
			}
		}
		date {
			match => ["logtimestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
			timezone => "Etc/GMT-1"
			locale => "en"
		}
		# mutate{
		# 	remove_field => ["message"]
		# }
	}
	if [fields][type] == "catalina" or [fields][type] == "localhost"{
		grok{
			patterns_dir => ["./patterns"]
			match => {
				# "message" => '%{DATETIMECATALINACUSTOMFR:logtimestamp}%{SPACE}%{JAVACLASS:javaclass}%{SPACE}%{WORD:method}%{NEWLINE}%{GREEDYDATA:grave}(%{NEWLINE}%{CATALINAEXCEPTION:exception})?'
				"message" => '%{DATETIMECATALINACUSTOMFR:logtimestamp}%{SPACE}%{JAVACLASS:javaclass}%{SPACE}%{WORD:method}%{NEWLINE}(?:%{CATALINAEXCEPTION:exception}|%{GREEDYDATA:exception})?'
			}
		}
		grok{
			patterns_dir => ["./patterns"]
			# keep_empty_captures => true
			# break_on_match => false
			match => {
				# "exception" => '%{MODULE_NAME:module_name}'
				"exception" => ['%{MODULE_NAME:module_name}','']
			}
		}

		# date_formatter {
		# 	source => "logtimestamp"
		# 	target => "locale_timestamp"
		# 	pattern => "MMM. dd, yyyy H:mm:ss a"
		# 	locale => "fr-FR"
		# 	timezone => "Europe/Paris"
		# }

		# date{
		# 	locale => "fr"
		# 	timezone => "Etc/GMT-1"
		# 	match => [
		# 		"logtimestamp", 
		# 		"MMMM. dd, yyyy HH:mm:ss a",
		# 		"MMM. dd, yyyy HH:mm:ss a" # aoÃ»t, mai
		# 		# "MMMM. dd, yyyy H:mm:ss a",
		# 		# "MM. dd, yyyy H:mm:ss a"
		# 	]
		# 	target => "@timestamp"
		# }

		# date{
		# 	timezone => "Europe/Paris"
		# 	locale => "fr-FR"
		# 	match => ["logtimestamp", "MMM. dd, yyyy H:mm:ss a"]
		# }
		mutate{
			remove_field => ["message", "ecs", "host", "agent"]
		}
	}
}

output {
	stdout { codec => rubydebug }
	if [event][dataset] == "apache.access"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			# password => "${LOGSTASH_INTERNAL_PASSWORD}"
			# user => "logstash_internal"
			index => "access-log-%{+YYYY}"
		}
	}

	# if [fields][type] == "catalina"{
	# 	elasticsearch {
	# 		hosts => "elasticsearch:9200"
	# 		# password => "${LOGSTASH_INTERNAL_PASSWORD}"
	# 		# user => "logstash_internal"
	# 		index => "catalina-%{log-year}"
	# 	}
	# }
	
	# if [fields][type] == "localhost"{
	# 	elasticsearch {
	# 		hosts => "elasticsearch:9200"
	# 		# password => "${LOGSTASH_INTERNAL_PASSWORD}"
	# 		# user => "logstash_internal"
	# 		index => "localhost-%{log-year}"
	# 	}
	# }
}
